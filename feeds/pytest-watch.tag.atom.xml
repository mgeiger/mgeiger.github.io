<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Matthew Geiger's Blog - pytest-watch</title><link href="https://mgeiger.github.io/" rel="alternate"></link><link href="https://mgeiger.github.io/feeds/pytest-watch.tag.atom.xml" rel="self"></link><id>https://mgeiger.github.io/</id><updated>2020-05-26T21:49:00-04:00</updated><entry><title>Using pytest-watch for ContinousÂ Testing</title><link href="https://mgeiger.github.io/articles/2020/05/26/using-pytest-watch.html" rel="alternate"></link><published>2020-05-26T21:49:00-04:00</published><updated>2020-05-26T21:49:00-04:00</updated><author><name>Matthew Geiger</name></author><id>tag:mgeiger.github.io,2020-05-26:/articles/2020/05/26/using-pytest-watch.html</id><summary type="html">&lt;p&gt;Using a continuous monitoring testing tool with your Python Pytest&amp;nbsp;project&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started making an interesting tool called gotime. 
I&amp;#8217;m a big fan of Test Driven Development and working with&amp;nbsp;pytest.&lt;/p&gt;
&lt;p&gt;This tool &lt;a href="https://pypi.org/project/pytest-watch/"&gt;pytest-watch&lt;/a&gt; will continuously monitor your project and run any test that has underlying changes to your project&amp;nbsp;code.&lt;/p&gt;</content><category term="Python"></category><category term="programming"></category><category term="python"></category><category term="pytest"></category><category term="pytest-watch"></category></entry></feed>